# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")

module_output_path = "ai_intelligent_voice_framework/intell_voice"

ohos_unittest("intell_voice_manager_test") {
  testonly = true
  module_out_path = module_output_path
  include_dirs = [
    "../../../../utils",
    "../../../../services/intell_voice_engine/server/utils",
    "../../../../interfaces/inner_api/native/",
    "../../",
    "../../server",
    "../../server/base",
    "../../server/enroll",
    "../../server/hdi_adapter",
    "../../server/sa",
    "../../server/update",
    "../../server/update/controller",
    "../../server/update/controller/strategy",
    "../../server/utils",
    "../../server/wakeup",
    "../../server/wakeup/headset",
    "../../../intell_voice_trigger/inc/",
    "../../../intell_voice_service/inc/",
    "src",
    "src/headset_test",
  ]

  use_exceptions = true

  cflags = [
    "-Wall",
    "-Werror",
    "-Wno-macro-redefined",
  ]

  cflags_cc = [
    "-Wno-error=unused-parameter",
    "-DHILOG_ENABLE",
    "-DENABLE_DEBUG",
    "-DSUPPORT_TELEPHONY_SERVICE",
    "-fno-access-control",
    "-DUSE_FFRT",
  ]

  deps = [
    "../../../../services/intell_voice_engine:intelligentvoice_engine",
    "../../../../services/intell_voice_trigger:intelligentvoice_trigger",
    "../../../../utils:intell_voice_utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:dataobs_manager",
    "access_token:libaccesstoken_sdk",
    "audio_framework:audio_capturer",
    "audio_framework:audio_client",
    "c_utils:utils",
    "call_manager:tel_call_manager_api",
    "common_event_service:cesfwk_innerkits",
    "core_service:tel_core_service_api",
    "data_share:datashare_consumer",
    "drivers_interface_intelligent_voice:intell_voice_engine_idl_headers",
    "drivers_interface_intelligent_voice:intell_voice_trigger_idl_headers",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.0",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.1",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.2",
    "drivers_interface_intelligent_voice:libintell_voice_trigger_proxy_1.0",
    "drivers_interface_intelligent_voice:libintell_voice_trigger_proxy_1.1",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hdf_core:libhdf_host",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "power_manager:powermgr_client",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "state_registry:tel_state_registry_api",
  ]
  sources = [
    "src/headset_test/adapter_host_manager_test.cpp",
    "src/headset_test/headset_manager_test.cpp",
    "src/headset_test/headset_manager_unit_test.cpp",
    "src/headset_test/headset_wakeup_engine_test.cpp",
    "src/huks_test/huks_manager_test.cpp",
    "src/huks_test/huks_manager_unit_test.cpp",
    "src/state_test/state_manager_test.cpp",
    "src/state_test/state_manager_unit_test.cpp",
    "src/task_test/task_manager_test.cpp",
    "src/task_test/task_manager_unit_test.cpp",
    "src/wakeup_test/wakeup_engine_test.cpp",
    "src/wakeup_test/wakeup_manager_test.cpp",
    "src/wakeup_test/wakeup_manager_unit_test.cpp",
  ]
}
