# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

ohos_shared_library("intell_voice_proxy") {
  sources = [
    "intell_voice_engine/proxy/engine_callback_inner.cpp",
    "intell_voice_engine/proxy/intell_voice_engine_callback_stub.cpp",
    "intell_voice_engine/proxy/intell_voice_engine_proxy.cpp",
    "intell_voice_engine/proxy/intell_voice_service_proxy.cpp",
    "intell_voice_engine/proxy/intell_voice_update_callback_stub.cpp",
    "intell_voice_engine/proxy/update_callback_inner.cpp",
  ]

  include_dirs = [
    "intell_voice_engine",
    "intell_voice_engine/proxy",
    "../utils",
  ]

  cflags_cc = [
    "-Wno-error=unused-parameter",
    "-DHILOG_ENABLE",
    "-DENABLE_DEBUG",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_intelligent_voice:intell_voice_engine_idl_headers",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "ai"
  part_name = "intelligent_voice_framework"
}

ohos_shared_library("intell_voice_server") {
  configs = [ "//build/config/compiler:exceptions" ]

  sources = [
    "intell_voice_engine/server/base/adapter_callback_service.cpp",
    "intell_voice_engine/server/base/audio_debug.cpp",
    "intell_voice_engine/server/base/audio_source.cpp",
    "intell_voice_engine/server/base/data_operation_callback.cpp",
    "intell_voice_engine/server/base/engine_base.cpp",
    "intell_voice_engine/server/base/engine_factory.cpp",
    "intell_voice_engine/server/base/engine_util.cpp",
    "intell_voice_engine/server/base/file_source.cpp",
    "intell_voice_engine/server/enroll/enroll_adapter_listener.cpp",
    "intell_voice_engine/server/enroll/enroll_engine.cpp",
    "intell_voice_engine/server/hdi_adapter/adapter_host_manager.cpp",
    "intell_voice_engine/server/hdi_adapter/engine_host_manager.cpp",
    "intell_voice_engine/server/hdi_adapter/headset_adapter_host_manager.cpp",
    "intell_voice_engine/server/hdi_adapter/headset_host_manager.cpp",
    "intell_voice_engine/server/sa/intell_voice_engine_arbitration.cpp",
    "intell_voice_engine/server/sa/intell_voice_engine_callback_proxy.cpp",
    "intell_voice_engine/server/sa/intell_voice_engine_stub.cpp",
    "intell_voice_engine/server/sa/intell_voice_service.cpp",
    "intell_voice_engine/server/sa/intell_voice_service_manager.cpp",
    "intell_voice_engine/server/sa/intell_voice_service_stub.cpp",
    "intell_voice_engine/server/sa/intell_voice_update_callback_proxy.cpp",
    "intell_voice_engine/server/update/controller/strategy/clone_update_strategy.cpp",
    "intell_voice_engine/server/update/controller/strategy/silence_update_strategy.cpp",
    "intell_voice_engine/server/update/controller/update_engine_controller.cpp",
    "intell_voice_engine/server/update/update_adapter_listener.cpp",
    "intell_voice_engine/server/update/update_engine.cpp",
    "intell_voice_engine/server/update/update_engine_utils.cpp",
    "intell_voice_engine/server/utils/history_info_mgr.cpp",
    "intell_voice_engine/server/utils/service_db_helper.cpp",
    "intell_voice_engine/server/utils/switch_observer.cpp",
    "intell_voice_engine/server/utils/switch_provider.cpp",
    "intell_voice_engine/server/utils/system_event_observer.cpp",
    "intell_voice_engine/server/wakeup/headset/headset_wakeup_engine_impl.cpp",
    "intell_voice_engine/server/wakeup/headset/headset_wakeup_wrapper.cpp",
    "intell_voice_engine/server/wakeup/wakeup_adapter_listener.cpp",
    "intell_voice_engine/server/wakeup/wakeup_engine.cpp",
    "intell_voice_engine/server/wakeup/wakeup_engine_impl.cpp",
    "intell_voice_engine/server/wakeup/wakeup_source_process.cpp",
    "intell_voice_engine/server/wakeup/wakeup_source_stop_callback.cpp",
    "intell_voice_trigger/server/connector_mgr/trigger_callback_impl.cpp",
    "intell_voice_trigger/server/connector_mgr/trigger_connector.cpp",
    "intell_voice_trigger/server/connector_mgr/trigger_connector_internal_impl.cpp",
    "intell_voice_trigger/server/connector_mgr/trigger_connector_internal_validation.cpp",
    "intell_voice_trigger/server/connector_mgr/trigger_connector_mgr.cpp",
    "intell_voice_trigger/server/connector_mgr/trigger_host_manager.cpp",
    "intell_voice_trigger/server/trigger_base_type.cpp",
    "intell_voice_trigger/server/trigger_db_helper.cpp",
    "intell_voice_trigger/server/trigger_detector.cpp",
    "intell_voice_trigger/server/trigger_detector_callback.cpp",
    "intell_voice_trigger/server/trigger_detector_recognition_callback.cpp",
    "intell_voice_trigger/server/trigger_helper.cpp",
    "intell_voice_trigger/server/trigger_manager.cpp",
    "intell_voice_trigger/server/trigger_service.cpp",
  ]

  include_dirs = [
    "../../../ai/intelligent_voice_framework/utils",
    "../../../ai/intelligent_voice_framework/interfaces/inner_api/native",
    "intell_voice_engine",
    "intell_voice_engine/server/base",
    "intell_voice_engine/server/enroll",
    "intell_voice_engine/server/hdi_adapter",
    "intell_voice_engine/server/update",
    "intell_voice_engine/server/update/controller",
    "intell_voice_engine/server/update/controller/strategy",
    "intell_voice_engine/server/sa",
    "intell_voice_engine/server/utils",
    "intell_voice_engine/server/wakeup",
    "intell_voice_engine/server/wakeup/headset",
    "intell_voice_trigger/server",
    "intell_voice_trigger/server/connector_mgr",
  ]

  cflags_cc = [
    "-Wno-error=unused-parameter",
    "-DHILOG_ENABLE",
    "-DENABLE_DEBUG",
  ]

  deps = [ "../utils:intell_voice_utils" ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:dataobs_manager",
    "access_token:libaccesstoken_sdk",
    "audio_framework:audio_capturer",
    "audio_framework:audio_client",
    "c_utils:utils",
    "call_manager:tel_call_manager_api",
    "common_event_service:cesfwk_innerkits",
    "core_service:tel_core_service_api",
    "data_share:datashare_consumer",
    "drivers_interface_intelligent_voice:intell_voice_engine_idl_headers",
    "drivers_interface_intelligent_voice:intell_voice_trigger_idl_headers",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.0",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.1",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.2",
    "drivers_interface_intelligent_voice:libintell_voice_trigger_proxy_1.0",
    "drivers_interface_intelligent_voice:libintell_voice_trigger_proxy_1.1",
    "eventhandler:libeventhandler",
    "hdf_core:libhdf_host",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "state_registry:tel_state_registry_api",
  ]

  subsystem_name = "ai"
  part_name = "intelligent_voice_framework"
}
