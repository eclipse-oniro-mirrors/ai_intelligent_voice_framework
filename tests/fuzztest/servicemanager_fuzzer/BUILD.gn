# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/features.gni")
import("//build/test.gni")
import("//foundation/ai/intelligent_voice_framework/intell_voice_service.gni")

module_output_path = "intelligent_voice_framework/intelligent_voice_framework"

ohos_fuzztest("ServiceManagerFuzzTest") {
  module_out_path = module_output_path
  fuzz_config_file = "../servicemanager_fuzzer"

  include_dirs = [
    "../../../services/intell_voice_engine/inc",
    "../../../services/intell_voice_engine/server/wakeup",
    "../../../services/intell_voice_engine/server/enroll",
    "../../../services/intell_voice_engine/server/update",
    "../../../services/intell_voice_engine/server/update/controller",
    "../../../services/intell_voice_engine/server/update/controller/strategy",
    "../../../services/intell_voice_engine/server/wakeup/headset",
    "../../../services/intell_voice_engine/server/manager",
    "../../../services/intell_voice_engine/server/utils",
    "../../../services/intell_voice_engine/server/base",
    "../../../services/intell_voice_engine/server/hdi_adapter",
    "../../../utils",
    "../../../services/intell_voice_service/inc",
    "../../../services/intell_voice_service/server/sa",
    "../../../services/intell_voice_service/server/utils",
    "../../../services/intell_voice_trigger/inc",
    "../../../services/intell_voice_trigger/server/",
    "../../../services/intell_voice_trigger/server/connector_mgr",
    "../../../services/intell_voice_engine/proxy",
    "../../../interfaces/inner_api/native",
  ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]
  sources = [ "servicemanager_fuzzer.cpp" ]

  deps = [
    "../../../frameworks/native:intellvoice_native",
    "../../../services/intell_voice_engine:intelligentvoice_engine_test",
    "../../../services/intell_voice_service:intell_voice_server_test",
    "../../../utils:intell_voice_utils",
  ]

  cflags_cc = []

  if (intelligent_voice_framework_trigger_enable) {
    cflags_cc += [ "-DTRIGGER_ENABLE" ]
  }

  if (intelligent_voice_framework_engine_enable) {
    cflags_cc += [ "-DENGINE_ENABLE" ]
  }

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:dataobs_manager",
    "access_token:libaccesstoken_sdk",
    "audio_framework:audio_capturer",
    "audio_framework:audio_client",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_consumer",
    "drivers_interface_intelligent_voice:intell_voice_engine_idl_headers",
    "drivers_interface_intelligent_voice:intell_voice_trigger_idl_headers",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.0",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.1",
    "drivers_interface_intelligent_voice:libintell_voice_engine_proxy_1.2",
    "drivers_interface_intelligent_voice:libintell_voice_trigger_proxy_1.0",
    "drivers_interface_intelligent_voice:libintell_voice_trigger_proxy_1.1",
    "eventhandler:libeventhandler",
    "hdf_core:libhdf_host",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "power_manager:powermgr_client",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (telephony_service_enable) {
    external_deps += [
      "call_manager:tel_call_manager_api",
      "core_service:tel_core_service_api",
      "state_registry:tel_state_registry_api",
    ]
    defines = [ "SUPPORT_TELEPHONY_SERVICE" ]
  }
}
